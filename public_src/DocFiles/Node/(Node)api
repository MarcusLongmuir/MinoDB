<p>
The <code>api</code> function is the best way to use any of the <a href="/docs/API">API</a> functions that don't have their own convenience function.
</p>

<div class="heading">api(<code>functionName</code>,<code>parameters</code>,<code>callback</code>)</div>
<p>
<code>functionName</code><br />
<code>Type: String</code><br />
The name of the <a href="/docs/API">API</a> function.
</p>
<p>
<code>parameters</code><br />
<code>Type: JSON Object</code><br />
Parameters for the function.
</p>
<p>
<code>callback</code><br />
<code>Type: Function(error,result)</code><br />
A function that will be called with the result of (or error caused by) the request. If the response includes the key "Error" at the top level then it will be returned in the <code>error</code>.
</p>

<div class="heading">Example Usage</div>
<p>
Although this function can be used with any of the <a href="/docs/API">API</a> functions, this example shows usage with the <a href="/docs/Counter_Function">Counter function</a>.
</p>
<pre>
var minocloud = new MinoCloud("ExampleUser","3XaMpL3Us3rAp1k3y");

minocloud.api(
	"Counter",
	{
		"Counters" : {
        "51341.ExampleUser.Page.1.Page Views" : 1,//Increment by 1
        "14613.ExampleUser.Video.1.Video Views" : -10,//Decrement by 10
        "918391.ExampleUser.Video.1.Video Views" : 0,//Just retrieve
        "12131.AnotherUser.CounterTest.2.My Counter" : {
            "Set" : 37//Set the counter value to 37
        }
	},
	function(error,result){
		console.log(error);
		console.log(result);
	}
)
</pre>
<p>
Output:
</p>
<pre>
null
{
    "Counters" : {
        "51341.ExampleUser.Page.1.Page Views" : 517,
        "14613.ExampleUser.Video.1.Video Views" : {
            "Error" : "Counter does not exist or you are not permitted to access it.",
            "Error Number" : 114
        },
        "918391.ExampleUser.Video.1.Video Views" : 237,
        "12131.AnotherUser.CounterTest.2.My Counter" : 37
    }
}
</pre>