<p>
MinoCloud handles the authentication for your <a href="/docs/Apps">app</a>. MinoCloud's libraries abstract the use of cookies and API requests to allow your <a href="/docs/Apps">app</a> to use one simple function that either provides the username of the signed in user or <code>null</code>.
</p>

<p>
The process works using the following steps:
</p>
<p>
1. The user arrives at application's splash/home page or an AJAX request is being made.
</p>
<p>
2. If there is a cookie named <code>MinoToken</code> then perform an API request to MinoCloud to check which user this represents. If this token is valid then the user has been identified, process the request for the user (End).
</p>
<p>
3. The user needs to be signed in to the <a href="/docs/Apps">app</a>. If user is signed into MinoCloud, skip to step 4.
</p>
<p>
4. The user is not signed into MinoCloud so your <a href="/docs/Apps">app</a> should advertise it's features and the MinoCloud <a href="/docs/Toolbar">toolbar</a> will be shown with buttons that allow the user to login or sign up.
</p>
<p>
5. Upon choosing either action, the user will be returned to the <a href="/docs/Apps">app</a> with an additional URL variable. This value is set as the <code>MinoToken</code> cookie by the first call of the MinoCloud authentication function. The page is then reloaded without this additional URL variable and this process begins from step 2.
</p>

<div class="heading">Language-specific guides</div>
<p>
<a href=“?(PHP) authenticate">MinoCloud authentication for PHP</a>
</p>
<p>
<a href=“?(Node) authenticate">MinoCloud authentication for Node</a>
</p>




<p>
MinoCloud authentication in PHP is achieved with the following:
</p>
<pre>
$MinoCloud = new MinoCloud('__APP_USERNAME__','__API_KEY__');
$appUser = $MinoCloud->authenticate();
if($appUser==null){
	//Not signed in. Adverstise your app (landing page)
} else {
	//Signed in. $appUser contains the username of the user
}
</pre>

<p>
When using MinoCloud authentication on the front-end in PHP to identify and sign in users, you can invoke the authentication and <a href="/docs/Toolbar">toolbar</a> processes when you create the <code>MinoCloud</code> object with the following code:
</p>
<pre>
$MinoCloud = new MinoCloud('__APP_USERNAME__','__API_KEY__', true, true);
</pre>
<p>
The last two parameters in the above constructor indicate that the following two functions should be performed immediately after the <code>MinoCloud</code> object has been created:
</p>
<pre>
$MinoCloud->authenticate();
$MinoCloud->initToolbar();
</pre>

<p>
Because <code>$MinoCloud->initToolbar();</code> writes a <code>&#60;script&#62;</code> block to the page, it may be preferable to perform the steps separately in order to place this block within the <code>&#60;head&#62;</code> tags.
</p>

<p>
The Javascript that the <code>$MinoCloud->initToolbar();</code> function writes defines two Javascript variables, <code>MinoCloud_app</code> and <code>MinoCloud_user</code>. These are used by MinoCloud to initialize the <a href="/docs/Toolbar">toolbar</a>, but can be used by your <a href="/docs/Apps">app</a>. The Javascript block also loads an external Javascript file from the <code>MinoCloud.com</code> site that will load the <a href="/docs/Toolbar">toolbar</a>.
</p>