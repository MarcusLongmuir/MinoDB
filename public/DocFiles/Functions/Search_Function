<p>
The <code>Search</code> function can be used to search within a particular <a href="/docs/Folders">folder</a>.
</p>

<p>
The function requires only the <code>Path</code> parameter to perform a search which will return every <a href="/docs/Objects">object</a> (including <a href="/docs/Folders">folders</a>) within the specified <a href="/docs/Paths">path</a>, but the search can be tightened using the optional parameters explained in the following sections.
</p>

<div class="heading">Basic search</div>
<pre>
{
    "Path" : "/ExampleUser/People/"
}
</pre>
<pre>
{
    "Starting Index" : 0,
    "Returned Amount" : 4,
    "Total" : 4,
    "Objects" : [
        {
            "ID" : 1512,
            "Name" : "Students",
            "Path" : "/ExampleUser/People/",
            "Full Path" : "/ExampleUser/People/Students/",
            "Folder" : true,
            "Created" : "2013-05-11 18:21:24"
        },
        {
            "ID" : 466,
            "Name" : "John Smith",
            "Path" : "/ExampleUser/People/",
            "Full Path" : "/ExampleUser/People/John Smith"
            "Folder" : false,
            "Created" : "2013-05-11 17:20:23",
            "Last Updated" : "2013-05-11 17:20:23",
            "Version" : 1,
            "ExampleUser.Person.1" : {
                "First Name" : "John",
                "Last Name" : "Smith",
                "Date of Birth" : "1983-04-28"
            }
        },
        {
            "ID" : 467,
            "Name" : "Mark Doe",
            "Path" : "/ExampleUser/People/",
            "Full Path" : "/ExampleUser/People/Mark Doe"
            "Folder" : false,
            "Created" : "2013-05-11 17:21:23",
            "Last Updated" : "2013-05-11 17:25:23",
            "Version" : 3,
            "ExampleUser.Person.1" : {
                "First Name" : "Mark",
                "Last Name" : "Doe",
                "Date of Birth" : "1989-05-19"
            }
        },
        {
            "ID" : 468,
            "Name" : "Jane Doe",
            "Path" : "/ExampleUser/People/",
            "Full Path" : "/ExampleUser/People/Jane Doe"
            "Folder" : false,
            "Created" : "2013-05-11 17:21:23",
            "Last Updated" : "2013-05-11 17:25:23",
            "Version" : 2,
            "ExampleUser.Person.1" : {
                "First Name" : "Jane",
                "Last Name" : "Doe",
                "Date of Birth" : "1987-02-23"
            }
        }
    ]
}
</pre>

<ul>
<li>
The <code>Starting Index</code> value shows the index of the first result in the set of all results for the search. If the search specified to skip the first 10 results then the "Starting Index" would be 10.
</li>
<li>
The <code>Returned Amount</code> value shows the number of results returned in this response. If the total number of results exceeds 1000 or the limit specified in the search parameters then the <code>Returned Amount</code> may be lower than the <code>Total</code>.
</li>
</ul>

<p>
The <code>Total</code> value shows the number of results that fit the search criteria.
</p>

<div class="heading">Optional parameters</div>
<ul>
<li><code>Include Subfolders</code> - (Default <code>true</code>) Specifies whether to include the contents of <a href="/docs/Folders">folders</a> within the specified <a href="/docs/Folders">folder</a>. If set to false, only <a href="/docs/Objects">objects</a> with a <code>Path</code> equal to the search path are returned.
</li>
<li>
<code>Starting Index</code> - (Default <code>0</code>) The index of the first result in the set of all results that conform to the criteria. Setting <code>Starting Index</code> to 10 will skip the first 10 results.
</li>
<li>
<code>Result Size</code> - (Default <code>100</code>) The maximum number of results that the search can return. The maximum possible value is 1000.
</li>
</ul>



<div class="heading">Basic conditions search</div>
<p>
Conditions can be specified to search using particular values (such as searching for a particular word or phrase) as well as by specifying a range (such as a minimum or maximum for a <a href="/docs/Number_Field">number field</a>).
</p>
<p>
Conditions can be nested to create searches that allow OR operations (specifying multiple acceptable values or ranges).
</p>
<p>
The request (the level specifying the <code>Path</code>) is a condition and as such you can specify <a href="/docs/Types">types</a> and other criteria to search by directly within this object.
</p>

<pre>
{
    "Path" : "/ExampleUser/People/",
    "Name" : {
        "Prefix" : "Jo",
    },
    "ExampleUser.Person.1" : {
        "Last Name" : {
            "Equal To" : "Smith"
        }
    }
}
</pre>

<p>
This search will only return the <a href="/docs/Items">item</a> named <code>"John Smith"</code> from the first result set above. The search specifies that the <code>Name</code> of the <a href="/docs/Objects">object</a> must have a (case-sensitive) prefix of <code>"Jo"</code> and the <code>"Last Name"</code> <a href="/docs/Fields">field</a> in the <code>"ExampleUser.Person.1"</code> <a href="/docs/Types">type</a> must be equal to <code>"Smith"</code>.
</p>

<div class="heading">Advanced conditions search</div>

<p>
To search using <code>Not</code>, <code>And</code> or <code>Or</code> operators, conditions must be specified in the <code>Conditions</code> key of the request and an <code>Operator</code> chosen from the set <code>And</code>, <code>Or</code> and <code>Not</code>.
</p>

<pre>
{
    "Path" : "/ExampleUser/People/",
    "Operator" : "Or"
    "Conditions" : [
        {//Condition A
            "Version" : {
                "Equal To" : 1
            },
            "ExampleUser.Person.1" : {
                "Last Name" : {
                    "Equal To" : "Smith"
                }
            }
        },
        {//Condtion B
            "Operator" : "Not",
            "Condtions" : [
                {
                    "ExampleUser.Person.1" : {
                        "First Name" : {
                            "Equal To" : "Mark"
                        }
                    }
                }
            ]
        }
    ]
}
</pre>

<p>
This search will return the <a href="/docs/Items">items</a> named <code>"John Smith"</code> and <code>"Jane Doe"</code> from the first result set. The search specifies that <b>either</b> the <a href="/docs/Objects">object</a> must have a <code>Version</code> equal to <code>1</code> and have a <code>"Last Name"</code> equal to <code>"Smith"</code> <b>or</b> that the <a href="/docs/Object">Object</a> must <b>not</b> have a "First Name" equal to "Mark". The <code>"John Smith"</code> <a href="/docs/Item">Item</a> conforms to the condition labelled <code>A</code> and the <code>"Jane Doe"</code> <a href="/docs/Items">item</a> conforms to the condition labelled <code>B</code>.
</p>

<div class="heading">Searching by <a href="/docs/Types">type</a> existence</div>
<p>
If a <a href="/docs/Types">type</a> is specified without any <a href="/docs/Fields">fields</a> then the condition enforces that the <a href="/docs/Types">type</a> must be present in the <a href="/docs/Objects">objects</a> and the inverse when used with a <code>Not</code> operator.
</p>

<pre>
{
    "Path" : "/ExampleUser/",
    "Operator" : "And",
    "Conditions" : [
        {
            "ExampleUser.Person.1" : {}
        },
        {
            "Operator" : "Not",
            "Conditions" : [
                {
                    "ExampleUser.Building.1" : {},
                }
            ]
        }
    ]
}
</pre>

<p>
This search will return the three <a href="/docs/Items">items</a> in the first result set (<code>"John Smith"</code>,<code>"Mark Doe"</code> and <code>"Jane Doe"</code>) as they have the <code>ExampleUser.People.1</code> <a href="/docs/Types">type</a> and do not have the <code>ExampleUser.Building.1</code> <a href="/docs/Types">type</a>.
</p>