<p>
The <code>saveObjects</code> function is a convenience wrapper for the <a href="/docs/Save_Function">Save function</a>.
</p>

<div class="heading">saveObjects(<code>objects</code>,<code>callback</code>)</div>
<p>
<code>objects</code><br />
<code>Type: Array</code> or <code>JSON object</code><br />
An array of <a href="/docs/Objects">objects</a> or a single <a href="/docs/Objects">object</a> to save. If the <code>ID</code> value for an <a href="/docs/Objects">object</a> is not set then it will be saved as a new <a href="/docs/Objects">object</a>.
</p>
<p>
<code>callback</code><br />
<code>Type: Function(error,result)</code><br />
A function that will be called with the result of (or error caused by) the request. <code>result</code> will either be an array of save results or a single save result. This save result includes the fields that are generated during the save process.
</p>

<div class="heading">Example Usage 1</div>
<p>
Saving a single <a href="/docs/Objects">object</a> returns a single JSON object as a result.
</p>
<pre>
var minocloud = new MinoCloud("ExampleUser","3XaMpL3Us3rAp1k3y");

minocloud.saveObjects(
	{
		"Name" : "My Item",
		"Path" : "/ExampleUser/"
	},
	function(error,result){
		console.log(error);
		console.log(result);
	}
)
</pre>
<p>
Output:
</p>
<pre>
null
{ 
	"Name" : "My Item",
	"Path" : "/ExampleUser/",
	"ID" : 749,
	"Full Path": "/ExampleUser/My Item",
	"Created" : "2013-10-12 18:14:34",
	"Last Updated" : "2013-10-12 18:14:34",
	"Version" : 1
}
</pre>

<div class="heading">Example Usage 2</div>
<p>
<code>saveObjects</code> can be used to save an array of <a href="/docs/Objects">objects</a> and will return an array as the result. With this usage, any <a href="/docs/Objects">objects</a> that cannot be saved because the <code>Full Path</code> is already allocated will be returned in the <code>result</code> alongside successfully saved <a href="/docs/Objects">objects</a>.
</p>
<pre>
var minocloud = new MinoCloud("ExampleUser","3XaMpL3Us3rAp1k3y");

minocloud.saveObjects(
	[
		{
			"Name" : "My Item",
			"Path" : "/ExampleUser/"
		},
		{
			"Name" : "My Item 2",
			"Path" : "/ExampleUser/"
		}
	],
	function(error,result){
		console.log(error);
		console.log(result);
	}
)
</pre>
<p>
Output:
</p>
<pre>
null
[
	{
		"Invalid": {
			"Name": {
				"Error": "An object with this name already exists in this folder.",
				"Error Number": 43
			}
		},
		"Error": "One or more errors.",
		"Error Number": 0
	},
	{ 
		"Name" : "My Item 2",
		"Path" : "/ExampleUser/",
		"ID" : 757,
		"Full Path": "/ExampleUser/My Item 2",
		"Created" : "2013-10-12 18:15:12",
		"Last Updated" : "2013-10-12 18:15:12",
		"Version" : 1
	}
]
</pre>