<p>
The <code>search</code> function is a convenience wrapper for the <a href="/docs/Search_Function">Search function</a>.
</p>

<div class="heading">search(<code>path</code>,<code>parameters</code>,<code>callback</code>)</div>
<p>
<code>path</code><br />
<code>Type: String</code><br />
The <a href="/docs/Paths">path</a> for the <a href="/docs/Folders">folder</a> that will be searched.
</p>
<p>
<code>parameters</code><br />
<code>Type: JSON Object</code><br />
The parameters for the <a href="/docs/Search_Function">Search function</a>. The <code>Path</code> parameter is provided as the <code>path</code> variable to this function.
</p>
<p>
<code>callback</code><br />
<code>Type: Function(error,result)</code><br />
A function that will be called with the result of (or error caused by) the request.
</p>

<div class="heading">Example Usage 1</div>
<p>
Searching a <a href="/docs/Folders">folder</a> for <a href="/docs/Objects">objects</a> that have a <code>Name</code> beginning with <code>Jo</code>.
</p>
<pre>
var minocloud = new MinoCloud("ExampleUser","3XaMpL3Us3rAp1k3y");

minocloud.search(
	"/ExampleUser/",
	{
		"Name" : {
			"Prefix" : "Jo"
		}
	},
	function(error,result){
		console.log(error);
		console.log(result);
	}
)
</pre>
<p>
Output:
</p>
<pre>
null
{
  "Starting Index": 0,
  "Returned Amount": 1,
  "Total": 1,
  "Objects": [
    {
      "ID": 60274,
      "Name": "John Smith",
      "Folder": false,
      "Path": "/ExampleUser/",
      "Full Path": "/ExampleUser/John Smith",
      "Created": "2013-10-17 14:24:46",
      "Last Updated": "2013-10-17 14:24:46",
      "Version": 1,
      "ExampleUser.Person.1": {
        "First Name": "John",
        "Last Name": "Smith",
        "Date of Birth": "1985-05-11"
      }
    }
  ],
  "Current Time": "2013-10-17 14:27:59‚Äù
}
</pre>