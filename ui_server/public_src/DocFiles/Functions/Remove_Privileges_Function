<p>
The <code>Remove Privileges</code> function can be used to remove privileges that you have granted.
</p>

<p>
Each privilege you are removing must specify if it should remove the read privilege too. By setting <code>Remove Read</code> to <code>true</code>, both the read and write privilege will be removed. Setting it to <code>false</code> will only remove the write privilege.
</p>

<p>
The function does not differentiate between successfully removing a privilege and the privilege not existing; both will show as a success.
</p>

<p>
The function takes a single top-level parameter called <code>Privileges</code> which is an array of the privileges you would like to remove.
</p>

<div class="heading">Example Request</div>
<pre>{
    "Privileges" : [
        {
            "Remove From" : "AnotherUser",
            "Path" : "/ExampleUser/Shared/",
            "Remove Read" : true
        },
        {
            "Remove From" : "AnotherUser",
            "Path" : "/ExampleUser/Collaborations/AnotherUser/",
            "Remove Read" : false
        }
    ]
}</pre>

<p>
The function returns an array of the successes in the order in which they were requested.
</p>

<pre>{
    "Privileges" : [
        {
            "Removed" : true
        },
        {
            "Removed" : true
        }
    ]
}</pre>

<div class="heading">Erroneous Request/Response</div>
<p>
If a specified user does not exist or a <a href="/docs/Paths">path</a> is an invalid format (<a href="/docs/Paths">paths</a> that do not exist are permitted), then none of the correctly-formed privileges will be granted and an <a href="/docs/Errors">error</a> will be returned.
</p>
<pre>{
    "Privileges" : [
        {
            "Remove From" : "NonExistantUser",
            "Path" : "/ExampleUser//DoubleSlashMistake/",
            "Remove Read" : false
        }
    ]
}</pre>
<p>
In the case of the above request, because the user <code>NonExistantUser</code> does not exist and the <code>Path</code> <code>/ExampleUser//DoubleSlashMistake</code> is invalid, the following <a href="/docs/Errors">error</a> would be returned.
</p>
<pre>{
    "Invalid" : {
        "Privileges" : {
            "Invalid" : {
                "0" : {
                    "Invalid" : {
                        "Remove From" : {
                            "Error" : "User does not exist.",
                            "Error Number" : 76
                        },
                        "Path" : {
                            "Error" : "Invalid format for path.",
                            "Error Number" : 8
                        }
                    }
                }
            }
        }
    }
}</pre>

<p>
To grant new privileges use the <a href="/docs/Add Privileges_Function">Add Privileges function</a>.
</p>