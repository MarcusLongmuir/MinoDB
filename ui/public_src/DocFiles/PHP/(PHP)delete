The <code>delete</code> function is a convenience wrapper for the <a href="/docs/Delete_Function">Delete function</a>.

<div class="heading">delete(<code>addresses</code>)</div>
<p>
<code>addresses</code><br />
<code>Type: Array</code> or <code>String</code> or <code>Integer</code><br />
An array of <a href="/docs/Paths">paths</a> or a single <a href="/docs/Paths">path</a>  for <a href="/docs/Objects">objects</a> that you want to delete.
</p>
<p>
<b>Returns:</b><br />
<code>Type: Array</code> or <code>Associative Array</code><br />
Either an array of <a href="/docs/Objects">objects</a> or a single <a href="/docs/Objects">object</a>.
</p>

<div class="heading">Example Usage 1</div>
<p>
Deleting a single <a href="/docs/Objects">object</a> returns a single JSON object as a result.
</p>
<pre>
$minocloud = new MinoCloud("ExampleUser","3XaMpL3Us3rAp1k3y");

var_dump(
	$minocloud->delete(
		"/ExampleUser/My Item"
	)
);
</pre>
<p>
Output:
</p>
<pre>
array(1) {
	["Deleted"]=>
	bool(true)
}
</pre>

<div class="heading">Example Usage 2</div>
<p>
<code>deleteObjects</code> can be used to delete an array of <a href="/docs/Paths">paths</a> and will return an array as the result. With this usage, only errors that are related to <a href="/docs/Paths">path</a> format will be returned as errors; <a href="/docs/Paths">paths</a> that could not be deleted are returned in the result as errors for their index.
</p>
<pre>
$minocloud = new MinoCloud("ExampleUser","3XaMpL3Us3rAp1k3y");

var_dump(
	minocloud->delete(array(
		array(
			"/ExampleUser/My Item",
			"/Something/Inaccessible"
		)
	)
);
</pre>
<p>
Output:
</p>
<pre>
array(2) {
	[0]=>
	array(1) {
		["Deleted"]=>
		bool(true)
	}
	[1]=>
	array(2) {
		["Error"]=>
		string(65) "Object does not exist or you do not have permission to modify it."
		["Error Number"]=>
		int(80)
	}
}
</pre>